"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.sendEmailFortenant = exports.sendEmail = void 0;
const nodemailer_1 = __importDefault(require("nodemailer"));
const sendEmail = (firstName, emailId, autoGenerate) => __awaiter(void 0, void 0, void 0, function* () {
    let transporter = nodemailer_1.default.createTransport({
        service: 'gmail',
        auth: {
            user: 'shubh.mourya57@gmail.com',
            pass: 'djistckuwystfjlf',
        },
    });
    var mailOptions = {
        from: 'shubh.mourya57@gmail.com',
        to: emailId,
        subject: 'Registeration code',
        text: 'hii this is your autogenerate password ' + autoGenerate,
    };
    transporter.sendMail(mailOptions, function (err, info) {
        if (err) {
            {
                console.log(err);
            }
        }
        console.log('data send');
    });
});
exports.sendEmail = sendEmail;
const sendEmailFortenant = (first_name, email, autoGenerate) => __awaiter(void 0, void 0, void 0, function* () {
    let transporter = nodemailer_1.default.createTransport({
        service: 'gmail',
        auth: {
            user: 'shubh.mourya57@gmail.com',
            pass: 'djistckuwystfjlf',
        },
    });
    var mailOptions = {
        from: 'shubh.mourya57@gmail.com',
        to: email,
        subject: 'Registeration code',
        text: ' this is your autogenerate tenant password ' + autoGenerate,
    };
    transporter.sendMail(mailOptions, function (err, info) {
        if (err) {
            {
                console.log(err);
            }
        }
        console.log('your Autogenerated password has been sent on your email id');
    });
});
exports.sendEmailFortenant = sendEmailFortenant;
// ---------------------------
